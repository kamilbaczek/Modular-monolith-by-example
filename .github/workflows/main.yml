name: Estimation Tool
on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
    
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Checkout 
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Setup dotnet
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.x'
        
    - name: Install dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build
           
  sonar:
    name: Sonar
    runs-on: ubuntu-latest
    needs: build
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Checkout 
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.x' # SDK Version to use.
  
    - name: Install dotCover
      run:  dotnet tool install --global JetBrains.dotCover.GlobalTool
    - name: Install sonarscanner-dotnet
      run:  dotnet tool install --global dotnet-sonarscanner
    - name: Sonarscanner for dotnet
      run: |
           dotnet sonarscanner begin /v:1.${{ github.run_number }} /d:sonar.cs.dotcover.reportsPaths=dotCover.Output.html  /d:sonar.verbose=true /d:sonar.language=cs /o:"kamilbaczek" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="$SONAR_TOKEN" /key:"kamilbaczek_Estimation-Tool"
           dotnet build --no-incremental
           dotnet dotcover test --dcReportType=HTML --Output="dotCover.Output.html"
           dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"

  security:
      name: Security Scan
      needs: sonar
      runs-on: ubuntu-latest
      steps:    
      - name: Checkout 
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: dotnet restore
      
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/dotnet@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects --detection-depth=10
          
  iaac:
    needs: security
    name: Deploy Code Azure - IAAC
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pulumi/actions@v3
        with:
          work-dir: Deployment/Infrastructure
          command: up
          stack-name: stage
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          
  architecture-diagrams:
      name: Architecture Diagrams
      runs-on: ubuntu-latest
      needs: sonar

      steps:    
      - name: Checkout 
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
     
      - name: Get changed Diagrams code files
        id: getfile
        run: |
          echo "::set-output name=files::$(git diff --name-only HEAD^ HEAD | grep .puml | xargs)"

      - name: Generate SVG Diagrams
        uses: holowinski/plantuml-github-action@main
        continue-on-error: true
        with:
          args: -v -tsvg ${{steps.getfile.outputs.files}}

      - name: Push Local Changes
        uses: stefanzweifel/git-auto-commit-action@v4.1.2
        continue-on-error: true
        with:
          commit_message: "Generate SVG files for PlantUML diagrams"
          branch: ${{ github.head_ref }}